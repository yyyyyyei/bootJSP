plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 💡 WAR 파일을 외부 Tomcat에 배포할 때, 서버에 이미 Tomcat 라이브러리가 있으므로 빌드 시에는 제공만 받는다는 의미입니다.
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    // 💡 JSP 엔진(Jasper) 의존성을 추가합니다. JSP 파일을 서블릿으로 변환하고 컴파일하는 역할을 합니다.
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    // 💡 JSTL(JSP Standard Tag Library)을 사용하기 위한 의존성입니다. (선택 사항)
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
}

tasks.named('test') {
	useJUnitPlatform()
}
